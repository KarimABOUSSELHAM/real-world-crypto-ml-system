<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>__x64_sys_openat (101,010,100 samples, 8.47%)</title><rect x="150.0" y="245" width="100.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="153.00" y="255.5" >__x64_sys_op..</text>
</g>
<g >
<title>[unknown] (101,010,100 samples, 8.47%)</title><rect x="620.0" y="373" width="100.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="623.00" y="383.5" >[unknown]</text>
</g>
<g >
<title>all (1,191,919,180 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>free_unref_page_commit (10,101,010 samples, 0.85%)</title><rect x="1090.0" y="69" width="10.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1093.00" y="79.5" ></text>
</g>
<g >
<title>_rust_notify::RustNotify::watch (292,929,290 samples, 24.58%)</title><rect x="820.0" y="373" width="290.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="823.00" y="383.5" >_rust_notify::RustNotify::watch</text>
</g>
<g >
<title>do_futex (50,505,050 samples, 4.24%)</title><rect x="410.0" y="277" width="50.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="413.00" y="287.5" >do_fu..</text>
</g>
<g >
<title>__open64_nocancel (101,010,100 samples, 8.47%)</title><rect x="150.0" y="309" width="100.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="153.00" y="319.5" >__open64_noc..</text>
</g>
<g >
<title>__srcu_read_lock (20,202,020 samples, 1.69%)</title><rect x="470.0" y="213" width="20.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="473.00" y="223.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (30,303,030 samples, 2.54%)</title><rect x="580.0" y="373" width="30.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="583.00" y="383.5" >Py..</text>
</g>
<g >
<title>security_file_open (10,101,010 samples, 0.85%)</title><rect x="230.0" y="165" width="10.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="233.00" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_statx (90,909,090 samples, 7.63%)</title><rect x="250.0" y="261" width="90.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="253.00" y="271.5" >__x64_sys_..</text>
</g>
<g >
<title>std::thread::sleep (10,101,010 samples, 0.85%)</title><rect x="1150.0" y="373" width="10.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1153.00" y="383.5" ></text>
</g>
<g >
<title>_ZN71_$LT$std..hash..random..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h9353d959393c0ae0E.llvm.8806174473595887558 (10,101,010 samples, 0.85%)</title><rect x="350.0" y="373" width="10.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="353.00" y="383.5" ></text>
</g>
<g >
<title>statx (90,909,090 samples, 7.63%)</title><rect x="250.0" y="325" width="90.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="253.00" y="335.5" >statx</text>
</g>
<g >
<title>htree_dirblock_to_tree (40,404,040 samples, 3.39%)</title><rect x="60.0" y="197" width="40.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="63.00" y="207.5" >htr..</text>
</g>
<g >
<title>filename_lookup (20,202,020 samples, 1.69%)</title><rect x="490.0" y="229" width="20.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="493.00" y="239.5" ></text>
</g>
<g >
<title>ext4_getblk (10,101,010 samples, 0.85%)</title><rect x="60.0" y="149" width="10.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="63.00" y="159.5" ></text>
</g>
<g >
<title>notify-rs_poll (515,151,510 samples, 43.22%)</title><rect x="10.0" y="389" width="510.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >notify-rs_poll</text>
</g>
<g >
<title>clock_nanosleep (181,818,180 samples, 15.25%)</title><rect x="930.0" y="325" width="180.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="933.00" y="335.5" >clock_nanosleep</text>
</g>
<g >
<title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (20,202,020 samples, 1.69%)</title><rect x="10.0" y="373" width="20.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (10,101,010 samples, 0.85%)</title><rect x="610.0" y="181" width="10.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="613.00" y="191.5" ></text>
</g>
<g >
<title>lookup_fast (10,101,010 samples, 0.85%)</title><rect x="190.0" y="181" width="10.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="193.00" y="191.5" ></text>
</g>
<g >
<title>&lt;pyo3::gil::SuspendGIL as core::ops::drop::Drop&gt;::drop (20,202,020 samples, 1.69%)</title><rect x="520.0" y="373" width="20.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="523.00" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (101,010,100 samples, 8.47%)</title><rect x="150.0" y="293" width="100.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="153.00" y="303.5" >entry_SYSCAL..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (50,505,050 samples, 4.24%)</title><rect x="720.0" y="373" width="50.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="723.00" y="383.5" >_PyEv..</text>
</g>
<g >
<title>syscall (60,606,060 samples, 5.08%)</title><rect x="400.0" y="357" width="60.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="403.00" y="367.5" >syscall</text>
</g>
<g >
<title>do_syscall_64 (30,303,030 samples, 2.54%)</title><rect x="490.0" y="309" width="30.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="493.00" y="319.5" >do..</text>
</g>
<g >
<title>statx (30,303,030 samples, 2.54%)</title><rect x="490.0" y="341" width="30.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="493.00" y="351.5" >st..</text>
</g>
<g >
<title>&lt;pyo3::pycell::impl_::BorrowChecker as pyo3::pycell::impl_::PyClassBorrowChecker&gt;::try_borrow (20,202,020 samples, 1.69%)</title><rect x="560.0" y="373" width="20.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="563.00" y="383.5" ></text>
</g>
<g >
<title>__fsnotify_parent (10,101,010 samples, 0.85%)</title><rect x="220.0" y="149" width="10.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="223.00" y="159.5" ></text>
</g>
<g >
<title>security_inode_permission (10,101,010 samples, 0.85%)</title><rect x="500.0" y="165" width="10.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="503.00" y="175.5" ></text>
</g>
<g >
<title>inode_permission (10,101,010 samples, 0.85%)</title><rect x="260.0" y="165" width="10.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="263.00" y="175.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (30,303,030 samples, 2.54%)</title><rect x="660.0" y="357" width="30.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="663.00" y="367.5" >_P..</text>
</g>
<g >
<title>walk_component (20,202,020 samples, 1.69%)</title><rect x="290.0" y="181" width="20.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="293.00" y="191.5" ></text>
</g>
<g >
<title>x64_sys_call (90,909,090 samples, 7.63%)</title><rect x="250.0" y="277" width="90.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="253.00" y="287.5" >x64_sys_call</text>
</g>
<g >
<title>inode_query_iversion (10,101,010 samples, 0.85%)</title><rect x="100.0" y="213" width="10.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="103.00" y="223.5" ></text>
</g>
<g >
<title>futex_wait_queue (10,101,010 samples, 0.85%)</title><rect x="610.0" y="229" width="10.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="613.00" y="239.5" ></text>
</g>
<g >
<title>x64_sys_call (30,303,030 samples, 2.54%)</title><rect x="490.0" y="293" width="30.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="493.00" y="303.5" >x6..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,202,020 samples, 1.69%)</title><rect x="470.0" y="325" width="20.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="473.00" y="335.5" ></text>
</g>
<g >
<title>walkdir::dent::DirEntry::metadata (90,909,090 samples, 7.63%)</title><rect x="250.0" y="357" width="90.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="253.00" y="367.5" >walkdir::d..</text>
</g>
<g >
<title>__slab_alloc.constprop.0 (10,101,010 samples, 0.85%)</title><rect x="80.0" y="133" width="10.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="83.00" y="143.5" ></text>
</g>
<g >
<title>&lt;std::sys::fs::unix::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (70,707,070 samples, 5.93%)</title><rect x="50.0" y="341" width="70.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="53.00" y="351.5" >&lt;std::s..</text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.85%)</title><rect x="610.0" y="309" width="10.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="613.00" y="319.5" ></text>
</g>
<g >
<title>memcg_account_kmem (10,101,010 samples, 0.85%)</title><rect x="170.0" y="133" width="10.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="173.00" y="143.5" ></text>
</g>
<g >
<title>__schedule (111,111,110 samples, 9.32%)</title><rect x="990.0" y="181" width="110.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="993.00" y="191.5" >__schedule</text>
</g>
<g >
<title>path_openat (80,808,080 samples, 6.78%)</title><rect x="160.0" y="197" width="80.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="163.00" y="207.5" >path_openat</text>
</g>
<g >
<title>inode_has_perm (10,101,010 samples, 0.85%)</title><rect x="510.0" y="197" width="10.0" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="513.00" y="207.5" ></text>
</g>
<g >
<title>path_lookupat (50,505,050 samples, 4.24%)</title><rect x="260.0" y="197" width="50.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="263.00" y="207.5" >path_..</text>
</g>
<g >
<title>__virt_addr_valid (10,101,010 samples, 0.85%)</title><rect x="330.0" y="181" width="10.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="333.00" y="191.5" ></text>
</g>
<g >
<title>&lt;pyo3::pycell::impl_::BorrowChecker as pyo3::pycell::impl_::PyClassBorrowChecker&gt;::release_borrow (10,101,010 samples, 0.85%)</title><rect x="550.0" y="373" width="10.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="553.00" y="383.5" ></text>
</g>
<g >
<title>schedule (10,101,010 samples, 0.85%)</title><rect x="610.0" y="213" width="10.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="613.00" y="223.5" ></text>
</g>
<g >
<title>lookup_fast (10,101,010 samples, 0.85%)</title><rect x="270.0" y="149" width="10.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="273.00" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,101,010 samples, 0.85%)</title><rect x="1090.0" y="37" width="10.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1093.00" y="47.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (40,404,040 samples, 3.39%)</title><rect x="60.0" y="213" width="40.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="63.00" y="223.5" >ext..</text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.85%)</title><rect x="50.0" y="325" width="10.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.00" y="335.5" ></text>
</g>
<g >
<title>vfs_open (30,303,030 samples, 2.54%)</title><rect x="210.0" y="181" width="30.0" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="213.00" y="191.5" >vf..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (20,202,020 samples, 1.69%)</title><rect x="970.0" y="277" width="20.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="973.00" y="287.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (111,111,110 samples, 9.32%)</title><rect x="990.0" y="229" width="110.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="993.00" y="239.5" >hrtimer_nanos..</text>
</g>
<g >
<title>uvicorn (676,767,670 samples, 56.78%)</title><rect x="520.0" y="389" width="670.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="523.00" y="399.5" >uvicorn</text>
</g>
<g >
<title>getname_flags.part.0 (10,101,010 samples, 0.85%)</title><rect x="330.0" y="229" width="10.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="333.00" y="239.5" ></text>
</g>
<g >
<title>do_statx (30,303,030 samples, 2.54%)</title><rect x="490.0" y="261" width="30.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="493.00" y="271.5" >do..</text>
</g>
<g >
<title>vfs_statx (30,303,030 samples, 2.54%)</title><rect x="490.0" y="245" width="30.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="493.00" y="255.5" >vf..</text>
</g>
<g >
<title>strncpy_from_user (10,101,010 samples, 0.85%)</title><rect x="330.0" y="213" width="10.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="333.00" y="223.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock.part.0 (10,101,010 samples, 0.85%)</title><rect x="60.0" y="181" width="10.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="63.00" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (90,909,090 samples, 7.63%)</title><rect x="250.0" y="293" width="90.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="253.00" y="303.5" >do_syscall..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (20,202,020 samples, 1.69%)</title><rect x="640.0" y="357" width="20.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="643.00" y="367.5" ></text>
</g>
<g >
<title>pgd_free (10,101,010 samples, 0.85%)</title><rect x="1090.0" y="133" width="10.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1093.00" y="143.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (30,303,030 samples, 2.54%)</title><rect x="410.0" y="213" width="30.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="413.00" y="223.5" >hr..</text>
</g>
<g >
<title>selinux_inode_permission (10,101,010 samples, 0.85%)</title><rect x="500.0" y="149" width="10.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="503.00" y="159.5" ></text>
</g>
<g >
<title>_RNvCscSpY9Juk0HT_7___rustc11___rdl_alloc (10,101,010 samples, 0.85%)</title><rect x="340.0" y="373" width="10.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="343.00" y="383.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (101,010,100 samples, 8.47%)</title><rect x="1000.0" y="165" width="100.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1003.00" y="175.5" >finish_task_..</text>
</g>
<g >
<title>std::thread::sleep (242,424,240 samples, 20.34%)</title><rect x="870.0" y="357" width="240.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="873.00" y="367.5" >std::thread::sleep</text>
</g>
<g >
<title>futex_wait_queue (50,505,050 samples, 4.24%)</title><rect x="410.0" y="245" width="50.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="413.00" y="255.5" >futex..</text>
</g>
<g >
<title>[unknown] (222,222,220 samples, 18.64%)</title><rect x="120.0" y="373" width="220.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="123.00" y="383.5" >[unknown]</text>
</g>
<g >
<title>ext4_map_blocks (10,101,010 samples, 0.85%)</title><rect x="60.0" y="133" width="10.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="63.00" y="143.5" ></text>
</g>
<g >
<title>cp_statx (10,101,010 samples, 0.85%)</title><rect x="250.0" y="229" width="10.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="253.00" y="239.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (10,101,010 samples, 0.85%)</title><rect x="90.0" y="165" width="10.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="93.00" y="175.5" ></text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace (20,202,020 samples, 1.69%)</title><rect x="130.0" y="357" width="20.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="133.00" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (50,505,050 samples, 4.24%)</title><rect x="60.0" y="293" width="50.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="63.00" y="303.5" >do_sy..</text>
</g>
<g >
<title>opendir (101,010,100 samples, 8.47%)</title><rect x="150.0" y="325" width="100.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="153.00" y="335.5" >opendir</text>
</g>
<g >
<title>do_syscall_64 (20,202,020 samples, 1.69%)</title><rect x="470.0" y="309" width="20.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="473.00" y="319.5" ></text>
</g>
<g >
<title>do_nanosleep (111,111,110 samples, 9.32%)</title><rect x="990.0" y="213" width="110.0" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="993.00" y="223.5" >do_nanosleep</text>
</g>
<g >
<title>&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (80,808,080 samples, 6.78%)</title><rect x="40.0" y="373" width="80.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="43.00" y="383.5" >&lt;walkdir:..</text>
</g>
<g >
<title>make_vfsuid (10,101,010 samples, 0.85%)</title><rect x="280.0" y="181" width="10.0" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="283.00" y="191.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (10,101,010 samples, 0.85%)</title><rect x="270.0" y="133" width="10.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="273.00" y="143.5" ></text>
</g>
<g >
<title>ext4_readdir (50,505,050 samples, 4.24%)</title><rect x="60.0" y="229" width="50.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="63.00" y="239.5" >ext4_..</text>
</g>
<g >
<title>lockref_get_not_dead (10,101,010 samples, 0.85%)</title><rect x="180.0" y="133" width="10.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="183.00" y="143.5" ></text>
</g>
<g >
<title>selinux_inode_getattr (10,101,010 samples, 0.85%)</title><rect x="510.0" y="213" width="10.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="513.00" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (50,505,050 samples, 4.24%)</title><rect x="60.0" y="261" width="50.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="63.00" y="271.5" >__x64..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (20,202,020 samples, 1.69%)</title><rect x="440.0" y="197" width="20.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="443.00" y="207.5" ></text>
</g>
<g >
<title>__close_nocancel (20,202,020 samples, 1.69%)</title><rect x="470.0" y="341" width="20.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="473.00" y="351.5" ></text>
</g>
<g >
<title>filp_flush (20,202,020 samples, 1.69%)</title><rect x="470.0" y="261" width="20.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="473.00" y="271.5" ></text>
</g>
<g >
<title>std::time::SystemTime::now (10,101,010 samples, 0.85%)</title><rect x="1160.0" y="373" width="10.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1163.00" y="383.5" ></text>
</g>
<g >
<title>futex_wait (50,505,050 samples, 4.24%)</title><rect x="410.0" y="261" width="50.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="413.00" y="271.5" >futex..</text>
</g>
<g >
<title>pthread_mutex_unlock (10,101,010 samples, 0.85%)</title><rect x="710.0" y="357" width="10.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="713.00" y="367.5" ></text>
</g>
<g >
<title>inode_permission (20,202,020 samples, 1.69%)</title><rect x="490.0" y="181" width="20.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="493.00" y="191.5" ></text>
</g>
<g >
<title>walk_component (10,101,010 samples, 0.85%)</title><rect x="270.0" y="165" width="10.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="273.00" y="175.5" ></text>
</g>
<g >
<title>drop_gil.llvm.15983506955339702762 (10,101,010 samples, 0.85%)</title><rect x="1110.0" y="373" width="10.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1113.00" y="383.5" ></text>
</g>
<g >
<title>do_futex (10,101,010 samples, 0.85%)</title><rect x="610.0" y="261" width="10.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="613.00" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,101,010 samples, 0.85%)</title><rect x="80.0" y="85" width="10.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="83.00" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (101,010,100 samples, 8.47%)</title><rect x="150.0" y="277" width="100.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="153.00" y="287.5" >do_syscall_64</text>
</g>
<g >
<title>__x64_sys_futex (10,101,010 samples, 0.85%)</title><rect x="610.0" y="277" width="10.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="613.00" y="287.5" ></text>
</g>
<g >
<title>generic_permission (10,101,010 samples, 0.85%)</title><rect x="490.0" y="165" width="10.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="493.00" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_statx (30,303,030 samples, 2.54%)</title><rect x="490.0" y="277" width="30.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="493.00" y="287.5" >__..</text>
</g>
<g >
<title>get_partial_node.part.0 (10,101,010 samples, 0.85%)</title><rect x="80.0" y="101" width="10.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="83.00" y="111.5" ></text>
</g>
<g >
<title>security_file_alloc (10,101,010 samples, 0.85%)</title><rect x="160.0" y="149" width="10.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="163.00" y="159.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (10,101,010 samples, 0.85%)</title><rect x="190.0" y="165" width="10.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="193.00" y="175.5" ></text>
</g>
<g >
<title>walkdir::IntoIter::handle_entry (10,101,010 samples, 0.85%)</title><rect x="460.0" y="373" width="10.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="463.00" y="383.5" ></text>
</g>
<g >
<title>do_filp_open (80,808,080 samples, 6.78%)</title><rect x="160.0" y="213" width="80.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="163.00" y="223.5" >do_filp_o..</text>
</g>
<g >
<title>&lt;pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt; as pyo3::types::any::PyAnyMethods&gt;::is_truthy (10,101,010 samples, 0.85%)</title><rect x="540.0" y="373" width="10.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="543.00" y="383.5" ></text>
</g>
<g >
<title>iterate_dir (50,505,050 samples, 4.24%)</title><rect x="60.0" y="245" width="50.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="63.00" y="255.5" >itera..</text>
</g>
<g >
<title>__check_object_size (10,101,010 samples, 0.85%)</title><rect x="330.0" y="197" width="10.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="333.00" y="207.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (20,202,020 samples, 1.69%)</title><rect x="490.0" y="197" width="20.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="493.00" y="207.5" ></text>
</g>
<g >
<title>clock_gettime (20,202,020 samples, 1.69%)</title><rect x="850.0" y="357" width="20.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="853.00" y="367.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (20,202,020 samples, 1.69%)</title><rect x="70.0" y="149" width="20.0" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="73.00" y="159.5" ></text>
</g>
<g >
<title>filename_lookup (50,505,050 samples, 4.24%)</title><rect x="260.0" y="213" width="50.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="263.00" y="223.5" >filen..</text>
</g>
<g >
<title>std::sys::fs::unix::lstat (90,909,090 samples, 7.63%)</title><rect x="250.0" y="341" width="90.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="253.00" y="351.5" >std::sys::..</text>
</g>
<g >
<title>__nanosleep (191,919,190 samples, 16.10%)</title><rect x="920.0" y="341" width="190.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="923.00" y="351.5" >__nanosleep</text>
</g>
<g >
<title>x64_sys_call (50,505,050 samples, 4.24%)</title><rect x="60.0" y="277" width="50.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="63.00" y="287.5" >x64_s..</text>
</g>
<g >
<title>hrtimer_sleeper_start_expires (30,303,030 samples, 2.54%)</title><rect x="410.0" y="229" width="30.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="413.00" y="239.5" >hr..</text>
</g>
<g >
<title>walkdir::IntoIter::pop (20,202,020 samples, 1.69%)</title><rect x="470.0" y="373" width="20.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="473.00" y="383.5" ></text>
</g>
<g >
<title>security_inode_getattr (10,101,010 samples, 0.85%)</title><rect x="510.0" y="229" width="10.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="513.00" y="239.5" ></text>
</g>
<g >
<title>futex_wait (10,101,010 samples, 0.85%)</title><rect x="610.0" y="245" width="10.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="613.00" y="255.5" ></text>
</g>
<g >
<title>__kmalloc (20,202,020 samples, 1.69%)</title><rect x="70.0" y="165" width="20.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="73.00" y="175.5" ></text>
</g>
<g >
<title>PyThread_acquire_lock_timed.warm (10,101,010 samples, 0.85%)</title><rect x="610.0" y="373" width="10.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="613.00" y="383.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (10,101,010 samples, 0.85%)</title><rect x="170.0" y="149" width="10.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="173.00" y="159.5" ></text>
</g>
<g >
<title>___slab_alloc (10,101,010 samples, 0.85%)</title><rect x="80.0" y="117" width="10.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="83.00" y="127.5" ></text>
</g>
<g >
<title>common_nsleep (10,101,010 samples, 0.85%)</title><rect x="1100.0" y="261" width="10.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1103.00" y="271.5" ></text>
</g>
<g >
<title>common_nsleep (111,111,110 samples, 9.32%)</title><rect x="990.0" y="245" width="110.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="993.00" y="255.5" >common_nsleep</text>
</g>
<g >
<title>&lt;std::path::Path as core::hash::Hash&gt;::hash (10,101,010 samples, 0.85%)</title><rect x="30.0" y="373" width="10.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="33.00" y="383.5" ></text>
</g>
<g >
<title>std::sys::fs::unix::lstat (30,303,030 samples, 2.54%)</title><rect x="490.0" y="357" width="30.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="493.00" y="367.5" >st..</text>
</g>
<g >
<title>init_file (10,101,010 samples, 0.85%)</title><rect x="160.0" y="165" width="10.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="163.00" y="175.5" ></text>
</g>
<g >
<title>path_lookupat (20,202,020 samples, 1.69%)</title><rect x="490.0" y="213" width="20.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="493.00" y="223.5" ></text>
</g>
<g >
<title>alloc_empty_file (20,202,020 samples, 1.69%)</title><rect x="160.0" y="181" width="20.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="163.00" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (20,202,020 samples, 1.69%)</title><rect x="970.0" y="261" width="20.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="973.00" y="271.5" ></text>
</g>
<g >
<title>__get_user_8 (20,202,020 samples, 1.69%)</title><rect x="970.0" y="245" width="20.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="973.00" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10,101,010 samples, 0.85%)</title><rect x="120.0" y="357" width="10.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="123.00" y="367.5" ></text>
</g>
<g >
<title>take_gil.llvm.15983506955339702762 (20,202,020 samples, 1.69%)</title><rect x="1170.0" y="373" width="20.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1173.00" y="383.5" ></text>
</g>
<g >
<title>getdents64 (50,505,050 samples, 4.24%)</title><rect x="60.0" y="325" width="50.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="63.00" y="335.5" >getde..</text>
</g>
<g >
<title>dnotify_flush (20,202,020 samples, 1.69%)</title><rect x="470.0" y="245" width="20.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="473.00" y="255.5" ></text>
</g>
<g >
<title>do_sys_openat2 (101,010,100 samples, 8.47%)</title><rect x="150.0" y="229" width="100.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="153.00" y="239.5" >do_sys_openat2</text>
</g>
<g >
<title>std::sys::fs::unix::readdir (101,010,100 samples, 8.47%)</title><rect x="150.0" y="341" width="100.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="153.00" y="351.5" >std::sys::fs..</text>
</g>
<g >
<title>std::sync::mpmc::list::Channel$LT$T$GT$::recv::_$u7b$$u7b$closure$u7d$$u7d$::h30814dc94dcab7df (80,808,080 samples, 6.78%)</title><rect x="380.0" y="373" width="80.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="383.00" y="383.5" >std::sync..</text>
</g>
<g >
<title>__schedule (10,101,010 samples, 0.85%)</title><rect x="610.0" y="197" width="10.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="613.00" y="207.5" ></text>
</g>
<g >
<title>security_current_getsecid_subj (10,101,010 samples, 0.85%)</title><rect x="200.0" y="181" width="10.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="203.00" y="191.5" ></text>
</g>
<g >
<title>mod_memcg_state (10,101,010 samples, 0.85%)</title><rect x="170.0" y="117" width="10.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="173.00" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10,101,010 samples, 0.85%)</title><rect x="160.0" y="133" width="10.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="163.00" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (30,303,030 samples, 2.54%)</title><rect x="410.0" y="197" width="30.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="413.00" y="207.5" >_r..</text>
</g>
<g >
<title>__x64_sys_close (20,202,020 samples, 1.69%)</title><rect x="470.0" y="277" width="20.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="473.00" y="287.5" ></text>
</g>
<g >
<title>lockref_put_return (20,202,020 samples, 1.69%)</title><rect x="310.0" y="197" width="20.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="313.00" y="207.5" ></text>
</g>
<g >
<title>walkdir::IntoIter::push (101,010,100 samples, 8.47%)</title><rect x="150.0" y="357" width="100.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="153.00" y="367.5" >walkdir::Int..</text>
</g>
<g >
<title>ext4_htree_store_dirent (20,202,020 samples, 1.69%)</title><rect x="70.0" y="181" width="20.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="73.00" y="191.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10,101,010 samples, 0.85%)</title><rect x="360.0" y="373" width="10.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="363.00" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.85%)</title><rect x="610.0" y="357" width="10.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="613.00" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,202,020 samples, 1.69%)</title><rect x="620.0" y="357" width="20.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="623.00" y="367.5" ></text>
</g>
<g >
<title>lookup_fast (20,202,020 samples, 1.69%)</title><rect x="290.0" y="165" width="20.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="293.00" y="175.5" ></text>
</g>
<g >
<title>do_dentry_open (20,202,020 samples, 1.69%)</title><rect x="210.0" y="165" width="20.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="213.00" y="175.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (10,101,010 samples, 0.85%)</title><rect x="60.0" y="117" width="10.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="63.00" y="127.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (10,101,010 samples, 0.85%)</title><rect x="1090.0" y="53" width="10.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1093.00" y="63.5" ></text>
</g>
<g >
<title>__schedule (20,202,020 samples, 1.69%)</title><rect x="440.0" y="213" width="20.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="443.00" y="223.5" ></text>
</g>
<g >
<title>complete_walk (10,101,010 samples, 0.85%)</title><rect x="180.0" y="181" width="10.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="183.00" y="191.5" ></text>
</g>
<g >
<title>x64_sys_call (101,010,100 samples, 8.47%)</title><rect x="150.0" y="261" width="100.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="153.00" y="271.5" >x64_sys_call</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (151,515,150 samples, 12.71%)</title><rect x="960.0" y="309" width="150.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="963.00" y="319.5" >entry_SYSCALL_64_af..</text>
</g>
<g >
<title>path_put (20,202,020 samples, 1.69%)</title><rect x="310.0" y="213" width="20.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="313.00" y="223.5" ></text>
</g>
<g >
<title>__legitimize_path (10,101,010 samples, 0.85%)</title><rect x="180.0" y="149" width="10.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="183.00" y="159.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (10,101,010 samples, 0.85%)</title><rect x="240.0" y="213" width="10.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="243.00" y="223.5" ></text>
</g>
<g >
<title>method_vectorcall.llvm.15835016122738116242 (10,101,010 samples, 0.85%)</title><rect x="690.0" y="357" width="10.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="693.00" y="367.5" ></text>
</g>
<g >
<title>alloc_fd (10,101,010 samples, 0.85%)</title><rect x="240.0" y="197" width="10.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="243.00" y="207.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (20,202,020 samples, 1.69%)</title><rect x="260.0" y="181" width="20.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="263.00" y="191.5" ></text>
</g>
<g >
<title>do_statx (80,808,080 samples, 6.78%)</title><rect x="250.0" y="245" width="80.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="253.00" y="255.5" >do_statx</text>
</g>
<g >
<title>ext4_bread (10,101,010 samples, 0.85%)</title><rect x="60.0" y="165" width="10.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="63.00" y="175.5" ></text>
</g>
<g >
<title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (70,707,070 samples, 5.93%)</title><rect x="50.0" y="357" width="70.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="53.00" y="367.5" >&lt;std::f..</text>
</g>
<g >
<title>schedule (20,202,020 samples, 1.69%)</title><rect x="440.0" y="229" width="20.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="443.00" y="239.5" ></text>
</g>
<g >
<title>__errno_location (10,101,010 samples, 0.85%)</title><rect x="800.0" y="373" width="10.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="803.00" y="383.5" ></text>
</g>
<g >
<title>x64_sys_call (20,202,020 samples, 1.69%)</title><rect x="470.0" y="293" width="20.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="473.00" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (50,505,050 samples, 4.24%)</title><rect x="410.0" y="325" width="50.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="413.00" y="335.5" >do_sy..</text>
</g>
<g >
<title>x64_sys_call (10,101,010 samples, 0.85%)</title><rect x="610.0" y="293" width="10.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="613.00" y="303.5" ></text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.85%)</title><rect x="370.0" y="373" width="10.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="373.00" y="383.5" ></text>
</g>
<g >
<title>in_lock_functions (10,101,010 samples, 0.85%)</title><rect x="330.0" y="165" width="10.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="333.00" y="175.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (20,202,020 samples, 1.69%)</title><rect x="470.0" y="357" width="20.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="473.00" y="367.5" ></text>
</g>
<g >
<title>free_unref_page (10,101,010 samples, 0.85%)</title><rect x="1090.0" y="85" width="10.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1093.00" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (50,505,050 samples, 4.24%)</title><rect x="410.0" y="341" width="50.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="413.00" y="351.5" >entry..</text>
</g>
<g >
<title>kmem_cache_alloc (10,101,010 samples, 0.85%)</title><rect x="170.0" y="165" width="10.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="173.00" y="175.5" ></text>
</g>
<g >
<title>free_pages (10,101,010 samples, 0.85%)</title><rect x="1090.0" y="117" width="10.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1093.00" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (10,101,010 samples, 0.85%)</title><rect x="610.0" y="341" width="10.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="613.00" y="351.5" ></text>
</g>
<g >
<title>vfs_statx (70,707,070 samples, 5.93%)</title><rect x="260.0" y="229" width="70.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="263.00" y="239.5" >vfs_statx</text>
</g>
<g >
<title>_PyObject_VectorcallTstate.llvm.8953330587472257213 (30,303,030 samples, 2.54%)</title><rect x="770.0" y="373" width="30.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="773.00" y="383.5" >_P..</text>
</g>
<g >
<title>walkdir::dent::DirEntry::from_path (30,303,030 samples, 2.54%)</title><rect x="490.0" y="373" width="30.0" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="493.00" y="383.5" >wa..</text>
</g>
<g >
<title>schedule (111,111,110 samples, 9.32%)</title><rect x="990.0" y="197" width="110.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="993.00" y="207.5" >schedule</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.85%)</title><rect x="610.0" y="325" width="10.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="613.00" y="335.5" ></text>
</g>
<g >
<title>try_to_unlazy (10,101,010 samples, 0.85%)</title><rect x="180.0" y="165" width="10.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="183.00" y="175.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (20,202,020 samples, 1.69%)</title><rect x="290.0" y="149" width="20.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="293.00" y="159.5" ></text>
</g>
<g >
<title>getname_flags (10,101,010 samples, 0.85%)</title><rect x="330.0" y="245" width="10.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="333.00" y="255.5" ></text>
</g>
<g >
<title>module_methods (10,101,010 samples, 0.85%)</title><rect x="1130.0" y="373" width="10.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1133.00" y="383.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (10,101,010 samples, 0.85%)</title><rect x="90.0" y="181" width="10.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="93.00" y="191.5" ></text>
</g>
<g >
<title>x64_sys_call (50,505,050 samples, 4.24%)</title><rect x="410.0" y="309" width="50.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="413.00" y="319.5" >x64_s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (50,505,050 samples, 4.24%)</title><rect x="60.0" y="309" width="50.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="63.00" y="319.5" >entry..</text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (111,111,110 samples, 9.32%)</title><rect x="990.0" y="261" width="110.0" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="993.00" y="271.5" >__x64_sys_clo..</text>
</g>
<g >
<title>std::path::Path::components (20,202,020 samples, 1.69%)</title><rect x="10.0" y="357" width="20.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>__mmdrop (10,101,010 samples, 0.85%)</title><rect x="1090.0" y="149" width="10.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1093.00" y="159.5" ></text>
</g>
<g >
<title>readdir64 (10,101,010 samples, 0.85%)</title><rect x="110.0" y="325" width="10.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="113.00" y="335.5" ></text>
</g>
<g >
<title>_copy_to_user (10,101,010 samples, 0.85%)</title><rect x="250.0" y="213" width="10.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="253.00" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30,303,030 samples, 2.54%)</title><rect x="490.0" y="325" width="30.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="493.00" y="335.5" >en..</text>
</g>
<g >
<title>pthread_mutex_lock (10,101,010 samples, 0.85%)</title><rect x="700.0" y="357" width="10.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="703.00" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (151,515,150 samples, 12.71%)</title><rect x="960.0" y="293" width="150.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="963.00" y="303.5" >do_syscall_64</text>
</g>
<g >
<title>__free_pages (10,101,010 samples, 0.85%)</title><rect x="1090.0" y="101" width="10.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1093.00" y="111.5" ></text>
</g>
<g >
<title>pyo3::gil::SuspendGIL::new (10,101,010 samples, 0.85%)</title><rect x="1140.0" y="373" width="10.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1143.00" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (90,909,090 samples, 7.63%)</title><rect x="250.0" y="309" width="90.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="253.00" y="319.5" >entry_SYSC..</text>
</g>
<g >
<title>__x64_sys_futex (50,505,050 samples, 4.24%)</title><rect x="410.0" y="293" width="50.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="413.00" y="303.5" >__x64..</text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.85%)</title><rect x="810.0" y="373" width="10.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="813.00" y="383.5" ></text>
</g>
<g >
<title>x64_sys_call (121,212,120 samples, 10.17%)</title><rect x="990.0" y="277" width="120.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="993.00" y="287.5" >x64_sys_call</text>
</g>
<g >
<title>fsnotify_find_mark (20,202,020 samples, 1.69%)</title><rect x="470.0" y="229" width="20.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="473.00" y="239.5" ></text>
</g>
<g >
<title>method_vectorcall.llvm.15835016122738116242 (10,101,010 samples, 0.85%)</title><rect x="1120.0" y="373" width="10.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1123.00" y="383.5" ></text>
</g>
</g>
</svg>
